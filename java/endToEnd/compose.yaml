services:
  etcd:
    image: quay.io/coreos/etcd
    ports:
      - 2379:2379
    networks:
      - front-tier
      - back-tier
    command:
      - /usr/local/bin/etcd
      - -name
      - etcd0
      - --data-dir
      - /etcd_data
      - -advertise-client-urls
      - http://0.0.0.0:2379
      - -listen-client-urls
      - http://0.0.0.0:2379
      - -initial-cluster-token
      - etcd-cluster-1
      - -initial-cluster
      - etcd0=http://localhost:2380
      - -initial-cluster-state
      - new

  database:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: control
      POSTGRES_PASSWORD: control
      POSTGRES_DB: control
    networks:
      - back-tier
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "control", "-U", "control" ]
      timeout: 2s
      interval: 2s
      retries: 10

  control:
    image: amazoncorretto:17
    ports:
      - 9090:9090
    networks:
      - back-tier
    volumes:
      - ../control/build/install/control:/control
      - ./src/test/resources:/config
      - logs:/tmp/logs
    command: ["/control/bin/control", "server", "/config/control-config.yaml"]
    depends_on:
      etcd:
        condition: service_started
      database:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:9091/healthcheck || exit 1
      timeout: 2s
      interval: 2s
      retries: 10

  node:
    image: amazoncorretto:17
    ports:
      - 9080:9080
    networks:
      - front-tier
      - back-tier
    volumes:
      - ../node/build/install/node:/node
      - ./src/test/resources:/config
      - logs:/tmp/logs
    command: ["/node/bin/node", "server", "/config/node-config.yaml"]
    depends_on:
      etcd:
        condition: service_started
      control:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:9081/healthcheck || exit 1
      timeout: 2s
      interval: 2s
      retries: 10

volumes:
  logs:
    driver: local
    driver_opts:
      type: none
      device: "build/docker-log"
      o: bind

networks:
  back-tier: {}
  front-tier: {}