logging:
  level: INFO
  loggers:
    com.codeheadsystems: DEBUG
    org.svarm: TRACE
    org.jdbi: TRACE
    com.mchange.v2.c3p0: WARN
    org.eclipse.jetty.server.HttpChannel: ERROR
  appenders:
    - type: console
      logFormat: "%d{HH:mm:ss.SSS} [%thread] [trace:%X{trace}] %-5level %logger{36} - %msg%n"
    - type: file
      maxFileSize: 50MB
      currentLogFilename: /tmp/logs/control.log
      archivedLogFilenamePattern: /tmp/logs/control-%i.log.gz
      logFormat: "%d{HH:mm:ss.SSS} [%thread] [trace:%X{trace}] %-5level %logger{36} - %msg%n"

# A test db for now, hsql. Also, we will use liquibase by default in the config file. Production won't do this.
runLiquibase: true
database:
  driverClass: org.postgresql.Driver
  user: control
  password: control
  url: jdbc:postgresql://database:5432/control?sslmode=disable

etcdConfiguration:
  target: ip:///etcd:2379

#metrics:
#  frequency: 1 minute
#  reportOnStop: true
#  reporters:
#    - type: log
#      logger: metrics
#      markerName: SLF4j
#    - type: graphite
#      host: localhost
#      port: 2003
#      prefix: node
#      transport: tcp

server:
  adminMinThreads: 1
  adminMaxThreads: 64
  adminContextPath: /
  applicationContextPath: /
  applicationConnectors:
    - type: h2
      jceProvider: Conscrypt
      port: 8080
      maxConcurrentStreams: 1024
      initialStreamRecvWindow: 65535
      keyStorePath: /server/keystore.jks
      keyStorePassword: password
      trustStorePath: /server/cacerts.jks
      trustStorePassword: password
      certAlias: control
      validateCerts: false
      disableSniHostCheck: true  # Work with docker hosts
  adminConnectors:
    - type: h2
      port: 8081
      jceProvider: Conscrypt
      maxConcurrentStreams: 1024
      initialStreamRecvWindow: 65535
      keyStorePath: /server/keystore.jks
      keyStorePassword: password
      trustStorePath: /server/cacerts.jks
      trustStorePassword: password
      certAlias: control
      validateCerts: false
      disableSniHostCheck: true  # Work with docker hosts

health:
  healthCheckUrlPaths: [ "/health-check" ]
  healthChecks:
    - name: deadlocks
      type: alive
      critical: true
      initialState: true
      schedule:
        checkInterval: 60s
        downtimeInterval: 2s
        initialDelay: 5s
        failureAttempts: 1
        successAttempts: 2
    - name: database
      type: alive
      critical: true
      initialState: true
      schedule:
        checkInterval: 30s
        downtimeInterval: 10s
        initialDelay: 5s
        failureAttempts: 1
        successAttempts: 2
    - name: EtcdHealthCheck
      type: alive
      critical: true
      initialState: true
      schedule:
        checkInterval: 60s
        downtimeInterval: 10s
        initialDelay: 5s
        failureAttempts: 1
        successAttempts: 2